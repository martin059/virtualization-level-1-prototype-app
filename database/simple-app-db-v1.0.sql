-- This script was generated by the ERD tool in pgAdmin 4 and then modified.
BEGIN;

CREATE SCHEMA IF NOT EXISTS app;

CREATE TABLE IF NOT EXISTS app."Task"
(
    id INTEGER NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 ),
    task_name CHARACTER varying(20) NOT NULL,
    task_descrip CHARACTER varying(280),
    creation_date DATE NOT NULL DEFAULT CURRENT_DATE,
    task_status CHARACTER varying(15) NOT NULL DEFAULT 'Created',
	-- Task status can only have one of five possible values:
	CONSTRAINT status_c check ( task_status in ('Created', 'Done', 'Deleted', 'Dropped', 'Postponed')),
    PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS app."Due_by"
(
    task_id INTEGER NOT NULL,
    due_date DATE NOT NULL,
    is_active boolean NOT NULL DEFAULT TRUE,
    PRIMARY KEY (task_id, due_date)
);

ALTER TABLE IF EXISTS app."Due_by"
    ADD CONSTRAINT task_id_fk FOREIGN KEY (task_id)
    REFERENCES app."Task" (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE
    NOT VALID;

-- The following trigger will deactivate any active due-date if a Task is deleted or dropped
CREATE OR REPLACE FUNCTION update_due_by_status()
RETURNS TRIGGER AS $$
BEGIN
    IF NEW.task_status IN ('Deleted', 'Dropped') THEN
        UPDATE app."Due_by"
        SET is_active = FALSE
        WHERE task_id = NEW.id AND is_active = TRUE;
    END IF;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER task_status_update_trigger
AFTER UPDATE ON app."Task"
FOR EACH ROW EXECUTE FUNCTION update_due_by_status();

END;